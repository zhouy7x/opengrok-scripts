<?xml version="1.0" encoding="UTF-8"?>
<!--

CDDL HEADER START

The contents of this file are subject to the terms of the
Common Development and Distribution License (the "License").
You may not use this file except in compliance with the License.

See LICENSE.txt included in this distribution for the specific
language governing permissions and limitations under the License.

When distributing Covered Code, include this CDDL HEADER in each
file and include the License file at LICENSE.txt.
If applicable, add the following below this CDDL HEADER, with the
fields enclosed by brackets "[]" replaced with your own identifying
information: Portions Copyright [yyyy] [name of copyright owner]

CDDL HEADER END

Copyright (c) 2010, 2018, Oracle and/or its affiliates. All rights reserved.
Portions Copyright (c) 2017-2018, Chris Fraire <cfraire@me.com>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.opengrok</groupId>
        <artifactId>opengrok-top</artifactId>
        <version>1.3.3</version>
    </parent>

    <artifactId>opengrok</artifactId>
    <version>1.3.3</version>
    <packaging>jar</packaging>

    <name>OpenGrok Indexer</name>

    <properties>
        <version>${project.version}</version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.bcel</groupId>
            <artifactId>bcel</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-highlighter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-join</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-memory</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queries</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-backward-codecs</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-suggest</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
        </dependency>
        <dependency> <!-- TODO: remove! (moving Messages to web module) -->
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-bean-validation</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- TODO: remove! (moving Messages to web module) -->
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>3.1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.28.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.cronutils</groupId>
            <artifactId>cron-utils</artifactId>
            <version>7.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.jvnet.hudson</groupId>
            <artifactId>org.suigeneris.jrcs.diff</artifactId>
            <version>0.4.2</version>
        </dependency>
        <dependency>
            <groupId>org.jvnet.hudson</groupId>
            <artifactId>org.suigeneris.jrcs.rcs</artifactId>
            <version>0.4.2</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
<!-- jflex:generate plugin HAS to be the first one which runs in generate-sources phase!!! -->
            <plugin>
                <groupId>de.jflex</groupId>
                <artifactId>jflex-maven-plugin</artifactId>
                <version>1.7.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <lexDefinitions>
                                <lexDefinition>${basedir}/target/jflex-sources</lexDefinition>
                            </lexDefinitions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.4</version>
                <configuration>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.commit.id</includeOnlyProperty>
                    </includeOnlyProperties>
		    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                    <execution>
                        <id>validate-the-git-infos</id>
                        <goals>
                            <goal>validateRevision</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>generate-info-properties</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <outputFile>
                                ${project.build.outputDirectory}/org/opengrok/indexer/info.properties
                            </outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <id>perform-git-substitutions</id>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <filesToInclude>
                                ${project.build.outputDirectory}/org/opengrok/indexer/info.properties
                            </filesToInclude>
                            <replacements>
                                <replacement>
                                    <token>git.commit.id.abbrev</token>
                                    <value>changeset_short</value>
                                </replacement>
                                <replacement>
                                    <token>git.commit.id</token>
                                    <value>changeset</value>
                                </replacement>
                            </replacements>
                            <quiet>false</quiet>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- patches jflex generated files to stop increasing buffer beyond token size that lucene accepts
                        https://github.com/OpenGrok/OpenGrok/issues/1170 make parsers stop producing tokens > 32766 chars
                        at least for PlainFullTokenizer, PlainSymbolTokenizer, JavaScriptSymbolTokenizer, JavaSymbolTokenizer
                        use below
                        -->
                        <id>replace-in-jflex-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                          <filesToInclude>
                              ${basedir}/target/generated-sources/jflex/org/opengrok/indexer/analysis/java/JavaSymbolTokenizer.java,${basedir}/target/generated-sources/jflex/org/opengrok/indexer/analysis/javascript/JavaScriptSymbolTokenizer.java,${basedir}/target/generated-sources/jflex/org/opengrok/indexer/analysis/json/JsonSymbolTokenizer.java,${basedir}/target/generated-sources/jflex/org/opengrok/indexer/analysis/plain/PlainFullTokenizer.java,${basedir}/target/generated-sources/jflex/org/opengrok/indexer/analysis/plain/PlainSymbolTokenizer.java
                          </filesToInclude>
                          <replacements>
                              <!--
                              needed for HTML 5 compliance (javadoc in JDK 11)
                              workaround for https://github.com/jflex-de/jflex/issues/534
                              -->
                              <replacement>
                                  <tokenFile>${basedir}/jflex-tt.txt</tokenFile>
                                  <valueFile>${basedir}/jflex-code.txt</valueFile>
                              </replacement>
                              <replacement>
                                  <tokenFile>${basedir}/jflex-tt-end.txt</tokenFile>
                                  <valueFile>${basedir}/jflex-code-end.txt</valueFile>
                              </replacement>

                              <replacement>
                                  <token>private static final int ZZ_BUFFERSIZE =</token>
                                  <value>private int ZZ_BUFFERSIZE =</value>
                              </replacement>
                              <replacement>
                                  <token>int requested = zzBuffer\.length - zzEndRead;</token>
                                  <value>int requested = zzBuffer.length - zzEndRead - zzFinalHighSurrogate;</value>
                              </replacement>
                              <replacement>
                                  <token>(zzFinalHighSurrogate = 1;)(\r?\n)</token>
                                  <value>$1$2          if (numRead == 1) { return true; }$2</value>
                              </replacement>
                              <replacement>
                                  <token>[ \t]*/\* is the buffer big enough\? \*/\s+if \(zzCurrentPos >= zzBuffer\.length.*?\}[ \t]*\r?\n</token>
                                  <value></value>
                              </replacement>
                              <!-- also revert 0 character check that got in with 1.6.1 : https://github.com/jflex-de/jflex/blob/master/jflex/examples/zero-reader/README.md -->
                              <replacement>
                                  <token>[ \t]*/\* not supposed to occur according to specification of java\.io\.Reader \*/\s+if \(numRead == 0.*?\}[ \t]*\r?\n</token>
                                  <value></value>
                              </replacement>
                          </replacements>
                          <regexFlags>
                              <regexFlag>DOTALL</regexFlag>
                          </regexFlags>
                       </configuration>
                    </execution>

                    <execution>
                        <!--
                        needed for HTML 5 compliance (javadoc in JDK 11)
                        workaround for https://github.com/jflex-de/jflex/issues/534
                        -->
                        <id>replace-tt-with-code-in-jflex-sources</id>
                        <phase>generate-sources</phase>

                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <filesToInclude>
                                ${basedir}/target/generated-sources/jflex/**/*.java
                            </filesToInclude>
                            <replacements>
                                <replacement>
                                    <tokenFile>${basedir}/jflex-tt.txt</tokenFile>
                                    <valueFile>${basedir}/jflex-code.txt</valueFile>
                                </replacement>
                                <replacement>
                                    <tokenFile>${basedir}/jflex-tt-end.txt</tokenFile>
                                    <valueFile>${basedir}/jflex-code-end.txt</valueFile>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.opengrok.indexer.index.Indexer</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                        <manifestEntries>
                        </manifestEntries>
                    </archive>
                </configuration>
                <executions> <!-- so the web module can use test classes from indexer module -->
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

           <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>collect-lex-lexh</id>
                        <phase>initialize</phase>
                        <configuration>
                            <target>
                                <property name="src.dir" value="src/main/resources"/>
                                <property name="tgt.dir" value="${basedir}/target/jflex-sources"/>
                                <ant target="-collect-lex-lexh"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>build-config-files</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target unless="skipTests">
                                <ant target="-post-compile-test"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <!-- Test helper class with name that confuses surefire -->
                        <exclude>**/TestRepository.java</exclude>
                    </excludes>
                    <argLine>@{surefireArgLine}</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>java9plus</id>
            <activation>
                <jdk>[9,18]</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <!-- Test helper class with name that confuses surefire -->
                                <exclude>**/TestRepository.java</exclude>
                            </excludes>
                            <argLine>
                                @{surefireArgLine}
                                --illegal-access=permit
                            </argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
